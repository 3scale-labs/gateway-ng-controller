version: "2.2"
services:
  ingress:
    image: envoyproxy/envoy-dev
    entrypoint: /bin/bash -c 'sleep 5 && /usr/local/bin/envoy -c /etc/envoy.yaml --service-cluster $$(domainname) --service-node $$(hostname) --log-level debug'
    volumes:
      - ${ENVOY_CONFIG:-./envoy/envoy.yaml}:/etc/envoy.yaml:z,ro
    expose:
      - "80"
      - "443"
      - "8080"
      - "8001"
    ports:
      - "80"
      - "443"
      - "8080"
      - "8001"
    scale: 1
    domainname: "ingress"
    depends_on:
      control-plane:
        condition: service_started
    networks:
      - ingress
      - control-plane
      - mesh
    extra_hosts:
      - "${CONTROL_PLANE_LOCAL:-control-plane-alt}:${CONTROL_PLANE_LOCAL_ADDR:-172.17.0.1}"

  web:
    image: katacoda/docker-http-server
    expose:
      - "80"
    ports:
      - "80"
    scale: 4
    domainname: "app"
    networks:
      mesh:
        aliases:
          - app
          - web.app

  control-plane:
    build:
      context: ..
      dockerfile: ./compose/control-plane/Dockerfile
    image: control-plane
    volumes:
      - ./control-plane/config.json:/home/app/bin/log.json:z,ro
    expose:
      - "5000"
      - "5001"
    ports:
      # export locally as 501X to allow running a debug services at 500X
      - "5010:5000"
      - "5011:5001"
    networks:
      control-plane:
        aliases:
          - ${CONTROL_PLANE_DOCKER:-control-plane-main}

networks:
  control-plane:
  ingress:
  mesh:
